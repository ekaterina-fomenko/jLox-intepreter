package com.craftinginterpreters.lox.interpreter;

import com.craftinginterpreters.lox.tokens.Token;

/**
 * Generated by GenerateAst.java class
 */

public abstract class Stmt {
    interface Visitor<R> {
        public R visitExpressionStmt(Expression stmt);

        public R visitPrintStmt(Print stmt);

        public R visitVarStmt(Var stmt);
    }

    /**
     * exprStmt  → expression ";" ;
     */
    public static class Expression extends Stmt {
        public Expression(Expr expression) {
            this.expression = expression;
        }

        <R> R accept(Visitor<R> visitor) {
            return visitor.visitExpressionStmt(this);
        }

        final Expr expression;
    }

    /**
     * printStmt → "print" expression ";" ;
     */
    public static class Print extends Stmt {
        public Print(Expr expression) {
            this.expression = expression;
        }

        <R> R accept(Visitor<R> visitor) {
            return visitor.visitPrintStmt(this);
        }

        final Expr expression;
    }

    /**
     * varDecl → "var" IDENTIFIER ( "=" expression )? ";" ;
     */
    public static class Var extends Stmt {
        public Var(Token name, Expr initializer) {
            this.name = name;
            this.initializer = initializer;
        }

        public <R> R accept(Visitor<R> visitor) {
            return visitor.visitVarStmt(this);
        }

        final Token name;
        final Expr initializer;
    }

    abstract <R> R accept(Visitor<R> visitor);
}
